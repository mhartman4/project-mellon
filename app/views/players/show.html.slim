br

p
  = link_to '< Back', players_path, :class=>"btn btn-primary", :style=>"background-color: white; border-color: #c0d9ef; color: black;"
h1 align="center"
  ="#{@player.name} - #{@player.games.pluck(:team).uniq.to_sentence}"

.btn-group align="center" style="padding: 10px 36%;"
  button.btn.btn-default.stat-selector.active type="button" id="fdp-selector" Fanduel Points
  button.btn.btn-default.stat-selector type="button" id="minutes-selector" Minutes
  button.btn.btn-default.stat-selector type="button" id="fdp-per-36-selector" FDP per 36
  button.btn.btn-default.stat-selector type="button" id="salary-selector" Salary

.well.col-md-4 style="margin: 0 33%;"
  table id="summary" width="100%"
    tr
      td Min.
      td 1st Qu.
      td Median
      td Mean
      td 3rd Qu.
      td Max.
    tr
      td id="min" #
      td id="1st-quart" #
      td id="median" #
      td id="mean" #
      td id="3rd-quart" #
      td id="max" #



.chart id="fanduel-points"
.chart id="minutes"
.chart id="fdp-per-36"
.chart id="salary"



h3 Game Log
table.table.table-hover
  thead
    tr
      th Date
      th Salary
      th FDP
      th Minutes

  tbody
    - @player.games.each do |game|
      tr
        td = link_to "#{game.game_day} - #{game.opponent}", game
        td = "$#{game.salary}"
        td = game.fanduel_points
        td = game.minutes

javascript:
  function renderChart(id, statName, chartData) {
    min = jStat(chartData).min();
    firstQuartile = jStat(chartData).quartiles()[0];
    median = jStat(chartData).median();
    mean = jStat(chartData).mean();
    thirdQuartile = jStat(chartData).quartiles()[2];
    max = jStat(chartData).max();
    sd = jStat(chartData).stdev();

    $("#min").text(round(min));
    $("#1st-quart").text(round(firstQuartile));
    $("#median").text(round(median));
    $("#mean").text(round(mean));
    $("#3rd-quart").text(round(thirdQuartile));
    $("#max").text(round(max));

    new Highcharts.Chart({
      chart: {
        renderTo: id
      },
      title: {
        text: statName
      },
      xAxis: {
        categories: #{ raw @player.games.reverse.collect {|game| game.game_day.strftime('%b %d') + ' ' + game.opponent}}
      },
      yAxis: {
        title: {
          text: statName
        },
        gridLineColor: '#EDEDED',
        plotLines: [{
            color: '#FF0000',
            width: 2,
            value: mean
        },
        {
          color: '#97C74E',
            width: 2,
            value: mean - sd
        },
        {
          color: '#97C74E',
            width: 2,
            value: mean + sd
        }
        ]
      },
      tooltip: {
        formatter: function() {
          return this.x + ': ' + Math.round(this.y * 100) / 100 + '<br/> p-value: ' + jStat.ztest(this.y, mean, sd, 1) + '<br/> t-score: ' + jStat.tscore(this.y, mean, sd, chartData.length)
        }
      },
      series: [{
        name: statName,
        data: chartData
      },
      {
        name: "Mean",
        color: '#FF0000',
        data: []
      },
      {
        name: "1 SD above/below",
        color: '#97C74E',
        data: []
      }],
    });
  }

/render Fanduel Points initially
javascript:
  $(function() {
    renderChart("fanduel-points", "Fanduel Points", #{@player.games.pluck(:fanduel_points).reverse});
  });

javascript:
  $("div.chart:not(:first)").hide();
  $('.stat-selector').click(function() {
    $(".chart").hide();
  });

  $('#fdp-selector').click(function() {
    $("#fanduel-points").show();
    renderChart("fanduel-points", "Fanduel Points", #{@player.games.pluck(:fanduel_points).reverse});
  });

  $('#minutes-selector').click(function() {
    $("#fdp-selector").removeClass("active");
    $("#minutes").show();
    renderChart("minutes", "Minutes", #{@player.games.pluck(:minutes).reverse});
  });

  $('#fdp-per-36-selector').click(function() {
    $("#fdp-selector").removeClass("active");
    $("#fdp-per-36").show();
    renderChart("fdp-per-36", "FDP per 36", #{@player.games.reverse.collect {|game| (game.fanduel_points / game.minutes) * 36}});
  });

  $('#salary-selector').click(function() {
    $("#fdp-selector").removeClass("active");
    $("#salary").show();
    renderChart("salary", "Salary", #{@player.games.pluck(:salary).reverse});
  });


